# This shell script is to be run by ENIGMA Developers on Linux.
# It will generate a general-purpose Makefile containing a target
#    for every CPP file within two subdirectories of this folder.
# The generated Makefile should probably then be edited for target-specific files.
# The most obvious of these is standalone_*.cpp, which is removed automatically.

echo "#Awesome Makefile generated by ./genmake.sh: THIS SHOULD BE EDITED BY AN INTELLIGENT BEING." > Makefile
echo "# File consists of a lot of gobbledy followed by a target" >> Makefile;
echo "" >> Makefile;

c_incls="-I./common/build/Linux/include/ -I./avs2x"
echo "CXXFLAGS = -fPIC -O3 -w -DNDEBUG -D_LINUX -D_USRDLL -DMASKTOOLS_EXPORTS -D_CRT_SECURE_NO_WARNINGS -DFILTER_AVS_25 $c_incls" >> Makefile
echo "ASMFLAGS = -I./common/asm/ -f elf64" >> Makefile
echo "CXX = g++" >> Makefile
echo "YASM = yasm" >> Makefile
echo "" >> Makefile

echo "# default target (because it appears first)" >> Makefile;
echo "default: libmasktools.so" >> Makefile;
echo "" >> Makefile;

for sdir in avs2x common masktools
  do
    for subdir in $sdir/ $sdir/*/ $sdir/*/*/ $sdir/*/*/*/; #Iterate 
      do
        for file in $subdir*.cpp ;
          do
          {
            pathless="${file##*/}";
            if [[ $pathless == \** ]]; 
              then continue; 
              fi
            obname=${file%.cpp}.o;
            obname=${obname//\//_};
            printf ".mobjs/$obname: $file" >> Makefile;
            for i in `c_incl $c_incls $file | gawk '/\/usr\/include/ { next } { print } '`;
            do
              printf " $i" >> Makefile;
            done;
            echo "" >> Makefile;
            
            echo "	\$(CXX) \$(CXXFLAGS) -c $file -o \$@" >> Makefile;
          };
          done;
          for file in $subdir*.asm ;
          do
          {
            pathless="${file##*/}";
            if [[ $pathless == \** ]]; 
              then continue; 
              fi
            obname=${file%.asm}.s.o;
            obname=${obname//\//_};
            echo ".mobjs/$obname: $file" >> Makefile;
            echo "	\$(YASM) \$(ASMFLAGS) $file -o \$@"  >> Makefile;
          };
          done;
      done;
  done;
echo "" >> Makefile;
echo "# Nobody knows the trouble I've seen, no... no... nooo..." >> Makefile;
echo ".mobjs:" >> Makefile;
echo "	-mkdir .mobjs" >> Makefile;
echo "" >> Makefile;
printf "libmasktools.so: .mobjs" >> Makefile;

  for sdir in avs2x common masktools
    do
      for subdir in $sdir/ $sdir/*/ $sdir/*/*/ $sdir/*/*/*/; #Iterate
        do
          for file in $subdir*.cpp;
            do
              pathless="${file##*/}";
              if [[ $pathless == \** ]];
                then continue;
                fi
              if [[ $pathless == standalone_* ]];
                then continue;
                fi
              obname=${file%.cpp}.o;
              obname=${obname//\//_};
              printf " .mobjs/$obname" >> Makefile; 
            done;
          for file in $subdir*.asm;
            do
              pathless="${file##*/}";
              if [[ $pathless == \** ]];
                then continue;
                fi
              if [[ $pathless == standalone_* ]];
                then continue;
                fi
              obname=${file%.asm}.s.o;
              obname=${obname//\//_};
              printf " .mobjs/$obname" >> Makefile; 
            done;
        done;
    done;
    echo "" >> Makefile;
  
  echo "	g++ -shared \$(LDFLAGS) .mobjs/*.o -o \$@" >> Makefile;

echo "" >> Makefile;
echo "clean:" >> Makefile;
echo "	-rm .mobjs/*" >> Makefile;
echo "	-rm libmasktools.so" >> Makefile;

echo "" >> Makefile;

